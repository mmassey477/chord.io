!function(e){"use strict";function n(e,n){angular.module(e,n||[]),angular.module(i).requires.push(e)}var i="mean",o={applicationEnvironment:e.env,applicationModuleName:i,applicationModuleVendorDependencies:["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap"],registerModule:n};e.ApplicationConfiguration=o}(window);
!function(o){"use strict";function e(e,n,t,i){n.html5Mode({enabled:!0,requireBase:!1}).hashPrefix("!"),t.interceptors.push("authInterceptor"),e.debugInfoEnabled("production"!==o.applicationEnvironment),i.debugEnabled("production"!==o.applicationEnvironment)}function n(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var e={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=e.top,document.body.scrollLeft=e.left}angular.bootstrap(document,[o.applicationModuleName])}angular.module(o.applicationModuleName,o.applicationModuleVendorDependencies),angular.module(o.applicationModuleName).config(e),e.$inject=["$compileProvider","$locationProvider","$httpProvider","$logProvider"],angular.element(document).ready(n)}(ApplicationConfiguration);
!function(e){"use strict";e.registerModule("core"),e.registerModule("core.routes",["ui.router"]),e.registerModule("core.admin",["core"]),e.registerModule("core.admin.routes",["ui.router"])}(ApplicationConfiguration);
!function(e){"use strict";e.registerModule("users"),e.registerModule("users.admin"),e.registerModule("users.admin.routes",["ui.router","core.routes","users.admin.services"]),e.registerModule("users.admin.services"),e.registerModule("users.routes",["ui.router","core.routes"]),e.registerModule("users.services")}(ApplicationConfiguration);
!function(){"use strict";function n(n){n.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}angular.module("core.admin").run(n),n.$inject=["menuService"]}();
!function(){"use strict";function t(t){t.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}angular.module("core.admin.routes").config(t),t.$inject=["$stateProvider"]}();
!function(){"use strict";function t(t){t.addMenu("account",{roles:["user"]}),t.addMenuItem("account",{title:"",state:"settings",type:"dropdown",roles:["user"]}),t.addSubMenuItem("account","settings",{title:"Edit Profile",state:"settings.profile"}),t.addSubMenuItem("account","settings",{title:"Edit Profile Picture",state:"settings.picture"}),t.addSubMenuItem("account","settings",{title:"Change Password",state:"settings.password"}),t.addSubMenuItem("account","settings",{title:"Manage Social Accounts",state:"settings.accounts"})}angular.module("core").run(t),t.$inject=["menuService"]}();
!function(){"use strict";function t(t,e,n){function a(t,a,o,i,s){if(a.data&&a.data.roles&&a.data.roles.length>0){for(var u=!1,c=0,f=a.data.roles;c<f.length;c++)if("guest"===f[c]||n.user&&void 0!==n.user.roles&&n.user.roles.indexOf(f[c])!==-1){u=!0;break}u||(t.preventDefault(),null!==n.user&&"object"==typeof n.user?e.transitionTo("forbidden"):e.go("authentication.signin").then(function(){r(a,o)}))}}function o(t,e,n,a,o){r(a,o)}function r(t,n){t.data&&t.data.ignoreState||(e.previous={state:t,params:n,href:e.href(t,n)})}t.$on("$stateChangeStart",a),t.$on("$stateChangeSuccess",o)}angular.module("core").run(t),t.$inject=["$rootScope","$state","Authentication"]}();
!function(){"use strict";function e(e,t){t.rule(function(e,t){var r=t.path(),o=r.length>1&&"/"===r[r.length-1];if(o){var l=r.substr(0,r.length-1);t.replace().path(l)}}),t.otherwise(function(e,t){e.get("$state").transitionTo("not-found",null,{location:!1})}),e.state("home",{url:"/",templateUrl:"/modules/core/client/views/home.client.view.html",controller:"HomeController",controllerAs:"vm"}).state("not-found",{url:"/not-found",templateUrl:"/modules/core/client/views/404.client.view.html",controller:"ErrorController",controllerAs:"vm",params:{message:["$stateParams",function(e){return e.message}]},data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"/modules/core/client/views/400.client.view.html",controller:"ErrorController",controllerAs:"vm",params:{message:["$stateParams",function(e){return e.message}]},data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"/modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}angular.module("core.routes").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}();
!function(){"use strict";function r(r){var e=this;e.errorMessage=null,r.message&&(e.errorMessage=r.message)}angular.module("core").controller("ErrorController",r),r.$inject=["$stateParams"]}();
!function(){"use strict";function n(n,e,o,t,c){function s(){c.post("/api/auth/signin",u.credentials).success(function(n){console.log("response",n),window.location.href=n}).error(function(n){console.log("response",n)})}function i(){u.isCollapsed=!1}var u=this;u.accountMenu=t.getMenu("account").items[0],u.authentication=o,u.isCollapsed=!1,u.menu=t.getMenu("topbar"),u.login=s,n.$on("$stateChangeSuccess",i)}angular.module("core").controller("HeaderController",n),n.$inject=["$scope","$state","Authentication","menuService","$http"]}();
!function(){"use strict";function o(){}angular.module("core").controller("HomeController",o)}();
!function(){"use strict";function e(){function e(e,t){return t=t||{},m.menus[e]={roles:t.roles||m.defaultRoles,items:t.items||[],shouldRender:a},m.menus[e]}function t(e,t){return m.validateMenuExistence(e),t=t||{},m.menus[e].items.push({title:t.title||"",state:t.state||"",type:t.type||"item","class":t["class"],roles:null===t.roles||"undefined"==typeof t.roles?m.defaultRoles:t.roles,position:t.position||0,items:[],shouldRender:a}),t.items&&t.items.forEach(function(n){m.addSubMenuItem(e,t.state,n)}),m.menus[e]}function n(e,t,n){return n=n||{},m.validateMenuExistence(e),m.menus[e].items.filter(function(e){return e.state===t}).forEach(function(e){e.items.push({title:n.title||"",state:n.state||"",params:n.params||{},roles:null===n.roles||"undefined"==typeof n.roles?e.roles:n.roles,position:n.position||0,shouldRender:a})}),m.menus[e]}function u(e){return m.validateMenuExistence(e),m.menus[e]}function s(){a=function(e){if(this.roles.indexOf("*")!==-1)return!0;if(!e)return!1;var t=e.roles.filter(function(e){return this.roles.indexOf(e)!==-1},this);return t.length>0},e("topbar",{roles:["*"]})}function i(e){m.validateMenuExistence(e),delete m.menus[e]}function r(e,t){return m.validateMenuExistence(e),m.menus[e].items=m.menus[e].items.filter(function(e){return e.state!==t}),m.menus[e]}function o(e,t){return m.validateMenuExistence(e),m.menus[e].items.forEach(function(e){e.items=e.items.filter(function(e){return e.state!==t})}),m.menus[e]}function l(e){if(!e||!e.length)throw new Error("MenuId was not provided");if(!m.menus[e])throw new Error("Menu does not exist");return!0}var a,m={addMenu:e,addMenuItem:t,addSubMenuItem:n,defaultRoles:["user","admin"],getMenu:u,menus:{},removeMenu:i,removeMenuItem:r,removeSubMenuItem:o,validateMenuExistence:l};return s(),m}angular.module("core").factory("menuService",e)}();
!function(){"use strict";function t(t,e,n){function o(){t.user&&(s.socket=io())}function c(t,e){s.socket&&s.socket.emit(t,e)}function i(t,e){s.socket&&s.socket.on(t,function(t){n(function(){e(t)})})}function u(t){s.socket&&s.socket.removeListener(t)}var s={connect:o,emit:c,on:i,removeListener:u,socket:null};return o(),s}angular.module("core").factory("Socket",t),t.$inject=["Authentication","$state","$timeout"]}();
!function(){"use strict";function t(t,n){function e(e,i,c){n.innerWidth>=800&&t(function(){var t=i[0];t.focus(),t.selectionStart=t.selectionEnd=t.value.length},100)}var i={restrict:"A",link:e};return i}angular.module("core").directive("autofocus",t),t.$inject=["$timeout","$window"]}();
!function(){"use strict";function t(t,e,a){function n(n,c){function i(t,n){var i="Chord.io",o=" - ",r=i+o;n.name.split(".").forEach(function(t,e){r=r+t.charAt(0).toUpperCase()+t.slice(1)+o}),n.data&&n.data.pageTitle&&(r=e(r+n.data.pageTitle+o)(a.$current.locals.globals)),r=r.slice(0,0-o.length),c.text(r)}t.$on("$stateChangeSuccess",i)}var c={restrict:"A",link:n};return c}angular.module("core").directive("pageTitle",t),t.$inject=["$rootScope","$interpolate","$state"]}();
!function(){"use strict";function r(r,e){function o(o,n){function s(o,n,s,t){function a(r,e){if(angular.isUndefined(e)||t.$name===e)return w=!0,d=!0,u(t[l].$invalid)}function i(e,o){if(angular.isUndefined(o)||t.$name===o)return r(function(){n.removeClass("has-error"),n.removeClass("has-success"),d=!1},0,!1)}function u(r){if(n.toggleClass("has-error",d&&r),m)return n.toggleClass("has-success",d&&!r)}var c,l,h,f,m,w=!1,d=!1;if(f=o.$eval(s.showErrors)||{},m=f.showSuccess||!1,c=n[0].querySelector(".form-control[name]")||n[0].querySelector("[name]"),h=angular.element(c),l=e(h.attr("name")||"")(o),!l)throw new Error("show-errors element has no child input elements with a 'name' attribute class");o.$watch(function(){return t[l]&&t[l].$invalid},u),o.$on("show-errors-check-validity",a),o.$on("show-errors-reset",i)}if(n.showErrors.indexOf("skipFormGroupCheck")===-1&&!o.hasClass("form-group")&&!o.hasClass("input-group"))throw new Error("show-errors element does not have the 'form-group' or 'input-group' class");return s}var n={restrict:"A",require:"^form",compile:o};return n}angular.module("core").directive("showErrors",r),r.$inject=["$timeout","$interpolate"]}();
!function(){"use strict";function e(e){e.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}angular.module("users.admin").run(e),e.$inject=["menuService"]}();
!function(){"use strict";function e(e){function s(e,s){return s.get({userId:e.userId}).$promise}e.state("admin.users",{url:"/users",templateUrl:"/modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController",controllerAs:"vm"}).state("admin.user",{url:"/users/:userId",templateUrl:"/modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",controllerAs:"vm",resolve:{userResolve:s},data:{pageTitle:"{{ userResolve.displayName }}"}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"/modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",controllerAs:"vm",resolve:{userResolve:s},data:{pageTitle:"{{ userResolve.displayName }}"}}),s.$inject=["$stateParams","AdminService"]}angular.module("users.admin.routes").config(e),e.$inject=["$stateProvider"]}();
!function(){"use strict";function t(t){t.state("settings",{"abstract":!0,url:"/settings",templateUrl:"/modules/users/client/views/settings/settings.client.view.html",controller:"SettingsController",controllerAs:"vm",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"/modules/users/client/views/settings/edit-profile.client.view.html",controller:"EditProfileController",controllerAs:"vm",data:{pageTitle:"Settings"}}).state("settings.password",{url:"/password",templateUrl:"/modules/users/client/views/settings/change-password.client.view.html",controller:"ChangePasswordController",controllerAs:"vm",data:{pageTitle:"Settings password"}}).state("settings.accounts",{url:"/accounts",templateUrl:"/modules/users/client/views/settings/manage-social-accounts.client.view.html",controller:"SocialAccountsController",controllerAs:"vm",data:{pageTitle:"Settings accounts"}}).state("settings.picture",{url:"/picture",templateUrl:"/modules/users/client/views/settings/change-profile-picture.client.view.html",controller:"ChangeProfilePictureController",controllerAs:"vm",data:{pageTitle:"Settings picture"}}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"/modules/users/client/views/authentication/authentication.client.view.html",controller:"AuthenticationController",controllerAs:"vm"}).state("authentication.signup",{url:"/signup",templateUrl:"/modules/users/client/views/authentication/signup.client.view.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signup"}}).state("authentication.signin",{url:"/signin?err",templateUrl:"/modules/users/client/views/authentication/signin.client.view.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signin"}}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"/modules/users/client/views/password/forgot-password.client.view.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password forgot"}}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"/modules/users/client/views/password/reset-password-invalid.client.view.html",data:{pageTitle:"Password reset invalid"}}).state("password.reset.success",{url:"/success",templateUrl:"/modules/users/client/views/password/reset-password-success.client.view.html",data:{pageTitle:"Password reset success"}}).state("password.reset.form",{url:"/:token",templateUrl:"/modules/users/client/views/password/reset-password.client.view.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password reset form"}})}angular.module("users.routes").config(t),t.$inject=["$stateProvider"]}();
!function(){"use strict";function e(e,r,o,i,s,t,n,a){function c(r){return r?void o.userSignup(v.credentials).then(l)["catch"](g):(e.$broadcast("show-errors-check-validity","vm.userForm"),!1)}function u(r){return r?void o.userSignin(v.credentials).then(m)["catch"](p):(e.$broadcast("show-errors-check-validity","vm.userForm"),!1)}function h(e){r.previous&&r.previous.href&&(e+="?redirect_to="+encodeURIComponent(r.previous.href)),s.location.href=e}function l(e){v.authentication.user=e,a.success({message:'<i class="glyphicon glyphicon-ok"></i> Signup successful!'}),r.go(r.previous.state.name||"home",r.previous.params)}function g(e){a.error({message:e.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Signup Error!',delay:6e3})}function m(e){v.authentication.user=e,a.info({message:"Welcome "+e.firstName}),r.go(r.previous.state.name||"home",r.previous.params)}function p(e){a.error({message:e.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Signin Error!',delay:6e3})}var v=this;v.authentication=t,v.getPopoverMsg=n.getPopoverMsg,v.signup=c,v.signin=u,v.callOauthProvider=h,v.usernameRegex=/^(?=[\w.-]+$)(?!.*[._-]{2})(?!\.)(?!.*\.$).{3,34}$/,i.search().err&&a.error({message:i.search().err}),v.authentication.user&&i.path("/")}angular.module("users").controller("AuthenticationController",e),e.$inject=["$scope","$state","UsersService","$location","$window","Authentication","PasswordValidator","Notification"]}();
!function(){"use strict";function s(s,e,t,o,r,a,i){function c(e){return e?void t.requestPasswordReset(g.credentials).then(l)["catch"](d):(s.$broadcast("show-errors-check-validity","vm.forgotPasswordForm"),!1)}function n(o){return o?void t.resetPassword(e.token,g.passwordDetails).then(u)["catch"](h):(s.$broadcast("show-errors-check-validity","vm.resetPasswordForm"),!1)}function l(s){g.credentials=null,i.success({message:s.message,title:'<i class="glyphicon glyphicon-ok"></i> Password reset email sent successfully!'})}function d(s){g.credentials=null,i.error({message:s.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Failed to send password reset email!',delay:4e3})}function u(s){g.passwordDetails=null,r.user=s,i.success({message:'<i class="glyphicon glyphicon-ok"></i> Password reset successful!'}),o.path("/password/reset/success")}function h(s){i.error({message:s.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Password reset failed!',delay:4e3})}var g=this;g.resetUserPassword=n,g.askForPasswordReset=c,g.authentication=r,g.getPopoverMsg=a.getPopoverMsg,g.authentication.user&&o.path("/")}angular.module("users").controller("PasswordController",s),s.$inject=["$scope","$stateParams","UsersService","$location","Authentication","PasswordValidator","Notification"]}();
!function(){"use strict";function r(r){function o(o,e,s,n){n.$validators.requirements=function(e){var s=!0;if(e){var n=r.getResult(e),t=0,g=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];n.errors.length<g.length&&(t=g.length-n.errors.length-1),o.requirementsColor=g[t].color,o.requirementsProgress=g[t].progress,n.errors.length?(o.getPopoverMsg=r.getPopoverMsg(),o.passwordErrors=n.errors,s=!1):(o.getPopoverMsg="",o.passwordErrors=[],s=!0)}return s}}var e={require:"ngModel",link:o};return e}angular.module("users").directive("passwordValidator",r),r.$inject=["PasswordValidator"]}();
!function(){"use strict";function r(){function r(r,e,i,n){r.$watch(function(){var e;return(r.passwordVerify||n)&&(e=r.passwordVerify+"_"+n),e},function(e){e&&(n.$validators.passwordVerify=function(e){var i=r.passwordVerify;return i===e})})}var e={require:"ngModel",scope:{passwordVerify:"="},link:r};return e}angular.module("users").directive("passwordVerify",r)}();
!function(){"use strict";function e(){function e(e,r,n,s){s.$parsers.push(function(e){return e?e.toLowerCase():""}),r.css("text-transform","lowercase")}var r={require:"ngModel",link:e};return r}angular.module("users").directive("lowercase",e)}();
!function(){"use strict";function e(e){var n={user:e.user};return n}angular.module("users.services").factory("Authentication",e),e.$inject=["$window"]}();
!function(){"use strict";function r(r){function e(r){var e=t.test(r);return e}function s(){var r="Please enter a passphrase or password with "+t.configs.minLength+" or more characters, numbers, lowercase, uppercase, and special characters.";return r}var t=r.owaspPasswordStrengthTest,a={getResult:e,getPopoverMsg:s};return a}angular.module("users.services").factory("PasswordValidator",r),r.$inject=["$window"]}();
!function(){"use strict";function e(e){var r=e("/api/users",{},{update:{method:"PUT"},updatePassword:{method:"POST",url:"/api/users/password"},deleteProvider:{method:"DELETE",url:"/api/users/accounts",params:{provider:"@provider"}},sendPasswordResetToken:{method:"POST",url:"/api/auth/forgot"},resetPasswordWithToken:{method:"POST",url:"/api/auth/reset/:token"},signup:{method:"POST",url:"/api/auth/signup"},signin:{method:"POST",url:"/api/auth/signin"}});return angular.extend(r,{changePassword:function(e){return this.updatePassword(e).$promise},removeSocialAccount:function(e){return this.deleteProvider({provider:e}).$promise},requestPasswordReset:function(e){return this.sendPasswordResetToken(e).$promise},resetPassword:function(e,r){return this.resetPasswordWithToken({token:e},r).$promise},userSignup:function(e){return this.signup(e).$promise},userSignin:function(e){return this.signin(e).$promise}}),r}function r(e){return e("/api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}angular.module("users.services").factory("UsersService",e),e.$inject=["$resource"],angular.module("users.admin.services").factory("AdminService",r),r.$inject=["$resource"]}();
!function(){"use strict";function e(e,t,r){function a(a){if(!a.config.ignoreAuthModule)switch(a.status){case 400:t.get("$state").go("bad-request",{message:a.data.message});break;case 401:r.user=null,t.get("$state").transitionTo("authentication.signin");break;case 403:t.get("$state").transitionTo("forbidden");break;case 404:t.get("$state").go("not-found",{message:a.data.message});break;case-1:var s=t.get("Notification");s.error({message:"No response received from server. Please try again later.",title:"Error processing request!",delay:5e3})}return e.reject(a)}var s={responseError:a};return s}angular.module("core").factory("authInterceptor",e),e.$inject=["$q","$injector","Authentication"]}();
!function(){"use strict";function e(e,t,r){function i(){u.pagedItems=[],u.itemsPerPage=15,u.currentPage=1,u.figureOutItemsToDisplay()}function s(){u.filteredItems=t("filter")(u.users,{$:u.search}),u.filterLength=u.filteredItems.length;var e=(u.currentPage-1)*u.itemsPerPage,r=e+u.itemsPerPage;u.pagedItems=u.filteredItems.slice(e,r)}function n(){u.figureOutItemsToDisplay()}var u=this;u.buildPager=i,u.figureOutItemsToDisplay=s,u.pageChanged=n,r.query(function(e){u.users=e,u.buildPager()})}angular.module("users.admin").controller("UserListController",e),e.$inject=["$scope","$filter","AdminService"]}();
!function(){"use strict";function e(e,s,r,u,i,o){function n(e){r.confirm("Are you sure you want to delete this user?")&&(e?(e.$remove(),a.users.splice(a.users.indexOf(e),1),o.success("User deleted successfully!")):a.user.$remove(function(){s.go("admin.users"),o.success({message:'<i class="glyphicon glyphicon-ok"></i> User deleted successfully!'})}))}function t(r){if(!r)return e.$broadcast("show-errors-check-validity","vm.userForm"),!1;var u=a.user;u.$update(function(){s.go("admin.user",{userId:u._id}),o.success({message:'<i class="glyphicon glyphicon-ok"></i> User saved successfully!'})},function(e){o.error({message:e.data.message,title:'<i class="glyphicon glyphicon-remove"></i> User update error!'})})}function c(){return a.user.username===a.authentication.user.username}var a=this;a.authentication=u,a.user=i,a.remove=n,a.update=t,a.isContextUserSelf=c}angular.module("users.admin").controller("UserController",e),e.$inject=["$scope","$state","$window","Authentication","userResolve","Notification"]}();
!function(){"use strict";function s(s,e,o,r,a,t){function c(e){return e?void r.changePassword(l.passwordDetails).then(i)["catch"](n):(s.$broadcast("show-errors-check-validity","vm.passwordForm"),!1)}function i(s){t.success({message:'<i class="glyphicon glyphicon-ok"></i> Password Changed Successfully'}),l.passwordDetails=null}function n(s){t.error({message:s.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Password change failed!'})}var l=this;l.user=o.user,l.changeUserPassword=c,l.getPopoverMsg=a.getPopoverMsg}angular.module("users").controller("ChangePasswordController",s),s.$inject=["$scope","$http","Authentication","UsersService","PasswordValidator","Notification"]}();
!function(){"use strict";function e(e,t,i,o){function s(e){o.success({message:'<i class="glyphicon glyphicon-ok"></i> Successfully changed profile picture'}),n.user=t.user=e,n.fileSelected=!1,n.progress=0}function r(e){n.fileSelected=!1,n.progress=0,o.error({message:e.message,title:'<i class="glyphicon glyphicon-remove"></i> Failed to change profile picture'})}var n=this;n.user=t.user,n.progress=0,n.upload=function(t){i.upload({url:"/api/users/picture",data:{newProfilePicture:t}}).then(function(t){e(function(){s(t.data)})},function(e){e.status>0&&r(e.data)},function(e){n.progress=parseInt(100*e.loaded/e.total,10)})}}angular.module("users").controller("ChangeProfilePictureController",e),e.$inject=["$timeout","Authentication","Upload","Notification"]}();
!function(){"use strict";function e(e,r,s,i,o,t){function c(r){if(!r)return e.$broadcast("show-errors-check-validity","vm.userForm"),!1;var s=new i(n.user);s.$update(function(r){e.$broadcast("show-errors-reset","vm.userForm"),t.success({message:'<i class="glyphicon glyphicon-ok"></i> Edit profile successful!'}),o.user=r},function(e){t.error({message:e.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Edit profile failed!'})})}var n=this;n.user=o.user,n.updateUserProfile=c}angular.module("users").controller("EditProfileController",e),e.$inject=["$scope","$http","$location","UsersService","Authentication","Notification"]}();
!function(){"use strict";function e(e,o,i,n,t){function c(){return d.user.additionalProvidersData&&Object.keys(d.user.additionalProvidersData).length}function r(e){return d.user.provider===e||d.user.additionalProvidersData&&d.user.additionalProvidersData[e]}function s(e){i.removeSocialAccount(e).then(a)["catch"](u)}function a(e){t.success({message:'<i class="glyphicon glyphicon-ok"></i> Removed successfully!'}),d.user=n.user=e}function u(e){t.error({message:e.message,title:'<i class="glyphicon glyphicon-remove"></i> Remove failed!'})}function l(i){i+="?redirect_to="+encodeURIComponent(e.$current.url.prefix),o.location.href=i}var d=this;d.user=n.user,d.hasConnectedAdditionalSocialAccounts=c,d.isConnectedSocialAccount=r,d.removeUserSocialAccount=s,d.callOauthProvider=l}angular.module("users").controller("SocialAccountsController",e),e.$inject=["$state","$window","UsersService","Authentication","Notification"]}();
!function(){"use strict";function t(t,e){var n=this;n.user=e.user}angular.module("users").controller("SettingsController",t),t.$inject=["$scope","Authentication"]}();
!function(){"use strict";function e(e){e.put("modules/core/client/views/400.client.view.html",'<div class="page-header">\n  <h1>Bad Request</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  <span ng-if="vm.errorMessage" ng-bind="vm.errorMessage"></span>\n  <span ng-if="!vm.errorMessage">You made a bad request</span>\n</div>\n'),e.put("modules/core/client/views/403.client.view.html",'<div class="page-header">\n  <h1>Forbidden</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  You are not authorized to access this resource\n</div>\n'),e.put("modules/core/client/views/404.client.view.html",'<div class="page-header">\n  <h1>Page Not Found</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span ng-if="vm.errorMessage" ng-bind="vm.errorMessage"></span>\n  <span ng-if="!vm.errorMessage">Page Not Found</span>\n</div>\n'),e.put("modules/core/client/views/header.client.view.html",'<div ng-controller="HeaderController as vm" style="background-color: #00c92f">\n  <div class="navbar-header">\n    <a ui-sref="home" class="navbar-brand" style="color: black">Chord.io</a>\n  </div>\n  <nav class="navbar-collapse" uib-collapse="!vm.isCollapsed" role="navigation">\n    <ul class="nav navbar-nav navbar-right" ng-hide="vm.authentication.user">\n      <li class="divider-vertical"></li>\n      <li ui-sref-active="active">\n        <a ng-click="vm.login()">Login to Spotify</a>\n      </li>\n      <li class="dropdown" uib-dropdown>\n        <a class="dropdown-toggle user-header-dropdown-toggle" uib-dropdown-toggle role="button">\n          <img ng-src="{{vm.authentication.user.profileImageURL}}" alt="{{vm.authentication.user.displayName}}" class="header-profile-image" />\n          <span ng-bind="vm.authentication.user.displayName"></span> <b class="caret"></b>\n        </a>\n        <ul class="dropdown-menu" role="menu">\n          <li ui-sref-active="active" ng-repeat="item in vm.accountMenu.items">\n            <a ui-sref="{{item.state}}" ng-bind="item.title"></a>\n          </li>\n          <li class="divider"></li>\n          <li>\n            <a href="/api/auth/signout" target="_self">Signout</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n</div>\n'),e.put("modules/core/client/views/home.client.view.html","<section>\nWelcom to chord.io\n</section>\n"),e.put("modules/users/client/views/admin/edit-user.client.view.html",'<section>\n  <div class="page-header">\n    <h1>User <span ng-bind="vm.user.username"></span></h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.userForm" ng-submit="vm.update(vm.userForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.user.firstName" placeholder="First Name" required autofocus />\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.user.lastName" placeholder="Last Name" required />\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="roles">Roles</label>\n          <div class="controls">\n            <input class="form-control" type="text" name="roles" ng-model="vm.user.roles" id="roles" ng-list required />\n            <div ng-messages="vm.userForm.roles.$error" role="alert">\n              <p class="help-block error-text" ng-message="required">At least one role is required.</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group">\n          <input type="submit" value="Update" class="btn btn-default">\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),e.put("modules/users/client/views/admin/list-users.client.view.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-4">\n        <h1>Users</h1>\n      </div>\n      <div class="col-md-4" style="margin-top: 2em">\n        <input class="form-control col-md-4" type="text" ng-model="vm.search" placeholder="Search" ng-change="vm.figureOutItemsToDisplay()" />\n      </div>\n    </div>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="user in vm.pagedItems" ui-sref="admin.user({userId: user._id})" class="list-group-item">\n      <h4 class="list-group-item-heading" ng-bind="user.username"></h4>\n      <p class="list-group-item-text pull-right small" ng-bind="user.roles"></p>\n      <p class="list-group-item-text" ng-bind="user.email"></p>\n    </a>\n  </div>\n\n  <uib-pagination boundary-links="true" max-size="8" items-per-page="vm.itemsPerPage" total-items="vm.filterLength" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></uib-pagination>\n</section>\n'),e.put("modules/users/client/views/admin/view-user.client.view.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-6">\n        <h1 ng-bind="vm.user.username"></h1>\n      </div>\n      <div class="col-md-4">\n        <a class="btn btn-primary" ui-sref="admin.user-edit({userId: vm.user._id})">\n          <i class="glyphicon glyphicon-edit"></i>\n        </a>\n        <a class="btn btn-primary" ng-click="vm.remove()" ng-if="!vm.isContextUserSelf()">\n          <i class="glyphicon glyphicon-trash"></i>\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-md-8">\n      <div class="row">\n        <div class="col-md-3"><strong>First Name</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.firstName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Last Name</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.lastName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Email</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.email"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Provider</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.provider"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Created</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.created"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Roles</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.roles"></div>\n      </div>\n    </div>\n  </div>\n</section>\n'),e.put("modules/users/client/views/authentication/authentication.client.view.html",'<div>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.signin(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="usernameOrEmail">Username or Email</label>\n          <input type="text" id="usernameOrEmail" name="usernameOrEmail" class="form-control" ng-model="vm.credentials.usernameOrEmail" placeholder="Username or Email" required autofocus>\n          <div ng-messages="vm.userForm.usernameOrEmail.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username or Email is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n          <input type="password" id="password" name="password" class="form-control" ng-model="vm.credentials.password" placeholder="Password" required>\n          <div ng-messages="vm.userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign in</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signup">Sign up</a>\n        </div>\n        <div class="text-center forgot-password">\n          <a ui-sref="password.forgot">Forgot your password?</a>\n        </div>\n        <br />\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),e.put("modules/users/client/views/authentication/signin.client.view.html",'<div>\n  <h3 class="col-xs-12 text-center">Or with your account</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.signin(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <uib-alert type="danger" ng-show="vm.error" class="text-center text-danger">\n            <span ng-bind="vm.error"></span>\n          </uib-alert>\n          <label for="usernameOrEmail">Username or Email</label>\n          <input type="text" id="usernameOrEmail" name="usernameOrEmail" class="form-control" ng-model="vm.credentials.usernameOrEmail" placeholder="Username or Email" required autofocus>\n          <div ng-messages="vm.userForm.usernameOrEmail.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username or Email is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n          <input type="password" id="password" name="password" class="form-control" ng-model="vm.credentials.password" placeholder="Password" required>\n          <div ng-messages="vm.userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign in</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signup">Sign up</a>\n        </div>\n        <div class="text-center forgot-password">\n          <a ui-sref="password.forgot">Forgot your password?</a>\n        </div>\n        <br />\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),e.put("modules/users/client/views/authentication/signup.client.view.html",'<div>\n  <h3 class="col-xs-12 text-center">Or sign up using your email</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.signup(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.credentials.firstName" placeholder="First Name" required autofocus>\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.credentials.lastName" placeholder="Last Name" required>\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="vm.credentials.email" placeholder="Email" lowercase required>\n          <div ng-messages="vm.userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="vm.credentials.username" ng-pattern="vm.usernameRegex" placeholder="Username" lowercase required>\n          <div ng-messages="vm.userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n            <p class="help-block error-text" ng-message="pattern">Please enter a valid username: 3+ characters long, non restricted word, characters "_-.", no consecutive dots, does not begin or end with dots, letters a-z and numbers 0-9.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n            <input type="password" id="password" name="password" class="form-control" ng-model="vm.credentials.password" placeholder="Password" uib-popover="{{vm.getPopoverMsg()}}" popover-trigger="outsideClick" password-validator required>\n          <div ng-messages="vm.userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.userForm.password.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.userForm.password.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign up</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signin" class="show-signup">Sign in</a>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),e.put("modules/users/client/views/password/forgot-password.client.view.html",'<section class="row">\n  <h3 class="col-md-12 text-center">Restore your password</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-5 col-md-2">\n    <form name="vm.forgotPasswordForm" ng-submit="vm.askForPasswordReset(vm.forgotPasswordForm.$valid)" class="form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="usernameOrEmail" class="text-center">Enter your account username or email.</label>\n          <input type="text" id="usernameOrEmail" name="usernameOrEmail" class="form-control" ng-model="vm.credentials.usernameOrEmail" lowercase required autofocus>\n          <div ng-messages="vm.forgotPasswordForm.usernameOrEmail.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a username or email.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Restore</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),e.put("modules/users/client/views/password/reset-password-invalid.client.view.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password reset is invalid</h3>\n  <a ui-sref="password.forgot" class="col-md-12">Ask for a new password reset</a>\n</section>\n'),e.put("modules/users/client/views/password/reset-password-success.client.view.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password successfully reset</h3>\n  <a ui-sref="home" class="col-md-12">Continue to home page</a>\n</section>\n'),e.put("modules/users/client/views/password/reset-password.client.view.html",'<section class="row">\n  <h3 class="col-md-12 text-center">Reset your password</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.resetPasswordForm" ng-submit="vm.resetUserPassword(vm.resetPasswordForm.$valid)" class="signin form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="vm.passwordDetails.newPassword" placeholder="New Password" autocomplete="new-password" uib-popover="{{vm.getPopoverMsg()}}" uib-popover-trigger="focus" uib-popover-placement="top" password-validator required autofocus>\n          <div ng-messages="vm.resetPasswordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.resetPasswordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="vm.passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="vm.passwordDetails.newPassword" required>\n          <div ng-messages="vm.resetPasswordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter the password again to verify.</p>\n            <p class="help-block error-text" ng-show="vm.resetPasswordForm.verifyPassword.$error.passwordVerify">Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.resetPasswordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Update Password</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),e.put("modules/users/client/views/settings/change-password.client.view.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="vm.passwordForm" ng-submit="vm.changeUserPassword(vm.passwordForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="currentPassword">Current Password</label>\n          <input type="password" id="currentPassword" name="currentPassword" class="form-control" ng-model="vm.passwordDetails.currentPassword" placeholder="Current Password" required autofocus>\n          <div ng-messages="vm.passwordForm.currentPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Your current password is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="vm.passwordDetails.newPassword" placeholder="New Password" uib-popover="{{vm.getPopoverMsg()}}" uib-popover-trigger="focus" password-validator required>\n          <div ng-messages="vm.passwordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.passwordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="vm.passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="vm.passwordDetails.newPassword" required>\n          <div ng-messages="vm.passwordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Verify your new password.</p>\n            <p class="help-block error-text" ng-show="vm.passwordForm.verifyPassword.$error.passwordVerify">Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.passwordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Password</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),e.put("modules/users/client/views/settings/change-profile-picture.client.view.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-3 col-md-4">\n    <form class="signin form-horizontal">\n      <fieldset>\n        <div class="form-group text-center">\n          <img ngf-src="vm.fileSelected ? picFile : vm.user.profileImageURL" alt="{{vm.user.displayName}}" class="img-thumbnail user-profile-picture" ngf-drop>\n        </div>\n        <div ng-show="vm.loading" class="form-group text-center">\n          <img ng-src="/modules/core/client/img/loaders/loader.gif" height="50" width="50" alt="Loading image...">\n        </div>\n        <div ng-show="!vm.fileSelected" class="text-center form-group">\n          <button class="btn btn-default btn-file" ngf-select="(vm.fileSelected = true) && (vm.loading = false)" ng-model="picFile" accept="image/*" ngf-before-model-change="vm.loading = true" ngf-resize="{width: 400}" ngf-resize-if="$width > 400 || $height > 400">Select Picture</button>\n        </div>\n        <div ng-show="vm.fileSelected" class="text-center form-group">\n          <button class="btn btn-primary" ng-click="vm.upload(picFile)">Use This Picture</button>\n          <button class="btn btn-default" ng-click="vm.fileSelected = false">Cancel</button>\n        </div>\n        <div ng-show="vm.fileSelected" class="progress text-center">\n          <div class="progress-bar" role="progressbar" aria-valuenow="{{vm.progress}}" aria-valuemin="0" aria-valuemax="100" style="width:{{vm.progress}}%" ng-bind="vm.progress + \'%\'">\n            <span class="sr-only">{{vm.progress}}% Complete</span>\n          </div>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),e.put("modules/users/client/views/settings/edit-profile.client.view.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.updateUserProfile(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.user.firstName" placeholder="First Name" required autofocus>\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.user.lastName" placeholder="Last Name" required>\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="vm.user.email" placeholder="Email" lowercase required>\n          <div ng-messages="vm.userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="vm.user.username" placeholder="Username" lowercase required>\n          <div ng-messages="vm.userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Profile</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),e.put("modules/users/client/views/settings/manage-social-accounts.client.view.html",'<section class="row">\n  <h3 class="col-md-12 text-center" ng-show="vm.hasConnectedAdditionalSocialAccounts()">Connected social accounts:</h3>\n  <div class="col-md-12 text-center">\n    <!-- If the user\'s provider field (primary) is a social account, show it here -->\n    <div ng-if="vm.user.provider !== \'local\'" class="social-account-container">\n      <img ng-src="/modules/users/client/img/buttons/{{vm.user.provider}}.png">\n      <i class="glyphicon glyphicon-check text-success user-primary-account" data-toggle="popover" title="Primary: {{vm.user.provider}}"></i>\n    </div>\n    <div ng-repeat="(providerName, providerData) in vm.user.additionalProvidersData" class="social-account-container">\n      <a href ng-click="vm.removeUserSocialAccount(providerName)">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/{{::providerName}}.png">\n        <span class="btn btn-danger btn-add-remove-account">\n          <i class="glyphicon glyphicon-trash"></i>\n        </span>\n      </a>\n    </div>\n  </div>\n  <h3 class="col-md-12 text-center" ng-show="!vm.hasConnectedAdditionalSocialAccounts()">Unconnected social accounts:</h3>\n  <div class="col-md-12 text-center">\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'facebook\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/facebook\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/facebook.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'twitter\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/twitter\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/twitter.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'google\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/google\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/google.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'linkedin\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/linkedin\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/linkedin.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'github\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/github\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/github.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'paypal\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/paypal\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/paypal.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n  </div>\n</section>\n'),e.put("modules/users/client/views/settings/settings.client.view.html",'<section>\n  <div class="page-header">\n    <h1>Settings</h1>\n  </div>\n  <div class="row">\n    <nav class="col-sm-3 col-md-3">\n      <ul class="nav nav-pills nav-stacked">\n        <li ui-sref-active="active">\n          <a ui-sref="settings.profile">Edit Profile</a>\n        </li>\n        <li ui-sref-active="active">\n          <a ui-sref="settings.picture">Change Profile Picture</a>\n        </li>\n        <li ui-sref-active="active" ng-show="vm.user.provider === \'local\'">\n          <a ui-sref="settings.password">Change Password</a>\n        </li>\n        <li ui-sref-active="active">\n          <a ui-sref="settings.accounts">Manage Social Accounts</a>\n        </li>\n      </ul>\n    </nav>\n    <div class="col-sm-9 col-md-8 settings-view">\n      <div ui-view></div>\n    </div>\n  </div>\n</section>\n')}angular.module("core").run(e),e.$inject=["$templateCache"]}();